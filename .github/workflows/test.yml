on:
  push:
    branches:
      - 'master'
  pull_request:
  workflow_dispatch:

name: Tests
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.24.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ui/frontend/package-lock.json

      - name: Install frontend dependencies
        run: cd ui/frontend && npm ci

      - name: Build frontend
        run: cd ui/frontend && npm run build

      - name: Copy frontend build to static directory
        run: |
          mkdir -p ui/static
          cp -r ui/frontend/build/* ui/static/

      - name: Lint and Vet
        run: go vet ./...

      - name: Run Tests with Coverage
        run: go test ./... -race -coverprofile=coverage.txt -covermode=atomic

      - name: Staticcheck
        uses: dominikh/staticcheck-action@v1.3.0
        env: 
          GOOS: linux
          GOARCH: amd64
        with:
          install-go: false
          cache-key: ${{ matrix.go }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
